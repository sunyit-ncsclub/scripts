#!/bin/sh
#
#     tiger - A UN*X security checking system
#     Copyright (C) 2003 Ryan Bradetich
#
#    This program is free software; you can redistribute it and/or modify
#    it under the terms of the GNU General Public License as published by
#    the Free Software Foundation; either version 2, or (at your option)
#    any later version.
#
#    This program is distributed in the hope that it will be useful,
#    but WITHOUT ANY WARRANTY; without even the implied warranty of
#    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#    GNU General Public License for more details.
#
#     Please see the file `COPYING' for the complete copyright notice.
#
# check_ntp - NTP specific configuration checks.
#
# 11/02/2003 - rbradetich@uswest.net - first release
#
# TODO:
#
#-----------------------------------------------------------------------------
#
TigerInstallDir='.'

#
# Set default base directory.
# Order or preference:
#      -B option
#      TIGERHOMEDIR environment variable
#      TigerInstallDir installed location
#
basedir=${TIGERHOMEDIR:=$TigerInstallDir}

for parm
do
   case $parm in
   -B) basedir=$2; break;;
   esac
done

#
# Verify that a config file exists there, and if it does
# source it.
#
[ ! -r $basedir/config ] && {
  echo "--ERROR-- [init002e] No 'config' file in \`$basedir'."
  exit 1
}

. $basedir/config

. $BASEDIR/initdefs

#
# If run in test mode (-t) this will verify that all required
# elements are set.
#
[ "$Tiger_TESTMODE" = 'Y' ] && {
  haveallcmds AWK EGREP NETSTAT || exit 1
  haveallfiles BASEDIR || exit 1
  haveallvars NTPCONF || exit 1
  
  echo "--CONFIG-- [init003c] $0: Configuration ok..."
  exit 0
}

#------------------------------------------------------------------------

echo
echo "# Checking ntpd configuration..."

haveallcmds AWK EGREP NETSTAT || exit 1
haveallfiles BASEDIR || exit 1
haveallvars NTPCONF || exit 1

# Is the ntpd process listening?
[ -z "`$NETSTAT -an 2>/dev/null | $EGREP '[.|:]123 '`" ] && exit

[ ! -r "$NTPCONF" ] && {
	message FAIL netw014f "" "$NTPCONF was not found."
	exit 
}

var=`$AWK -F"#" '$1 ~ /server[ 	]/                 { server = 1 }
                 $1 ~ /restrict[ 	]/         { restrict = 1 }
                 $1 ~ /manycastclient[ 	]/	   { bcast = 1 }
                 $1 ~ /broadcastclient[ 	]/ { bcast = 1 }
                 $1 ~ /multicastclient[ 	]/ { bcast = 1 }
      END { printf("%d%d%d\n", server, restrict, bcast) }' $NTPCONF`

[ ${var%??} = 0 ] && message FAIL netw042f "" "Remote NTP Server(s) must be specified!"

var=${var#?}
[ ${var%?}  = 0 ] && message FAIL netw043f "" "Remote NTP Server(s) must be restricted!"

var=${var#?}
[ $var = 1 ] && message FAIL netw044f "" "NTP broadcast client not allowed!"

exit 0
