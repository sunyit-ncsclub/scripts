#!/bin/sh
#
#     tiger - A UN*X security checking system
#     Copyright (C) 1993 Douglas Lee Schales, David K. Hess, David R. Safford
#
#    This program is free software; you can redistribute it and/or modify
#    it under the terms of the GNU General Public License as published by
#    the Free Software Foundation; either version 2, or (at your option)
#    any later version.
#
#    This program is distributed in the hope that it will be useful,
#    but WITHOUT ANY WARRANTY; without even the implied warranty of
#    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#    GNU General Public License for more details.
#
#     Please see the file `COPYING' for the complete copyright notice.
#
# check_rootdir - 11/10/2001
#
# check_rootdir - 07/25/2002 - jfs
#       Changed TigerInstallDir to .
# check_rootdir - 06/21/2003 - jfs
#       Removed useless debug message (patch from Ryan Bradetich)
# check_rootdir - 11/18/2003 - Patch from Ryan Bradetich:
#        * Add an ownership check for the root directory.
#        * Add documentation for the ownership check.
#        * Remove the mode variable (no longer used).
#        * Comment updates.
#        * Remove the check to make sure / is a directory.
# check_rootdir - 03/21/2005 - jfs
#        Do not warn on the inode if the root filesystem is not ext2|3
#        (Debian Bug #298305)
#       
#
#-----------------------------------------------------------------------------
#
TigerInstallDir='.'

#
# Set default base directory.
# Order or preference:
#      -B option
#      TIGERHOMEDIR environment variable
#      TigerInstallDir installed location
#
basedir=${TIGERHOMEDIR:=$TigerInstallDir}

for parm
do
   case $parm in
   -B) basedir=$2; break;;
   esac
done

#
# Verify that a config file exists there, and if it does
# source it.
#
[ ! -r $basedir/config ] && {
  echo "--ERROR-- [init002e] No 'config' file in \`$basedir'."
  exit 1
}

. $basedir/config

. $BASEDIR/initdefs

#
# If run in test mode (-t) this will verify that all required
# elements are set.
#
[ "$Tiger_TESTMODE" = 'Y' ] && {
  haveallcmds CAT SORT AWK LS RM GETFS GREP AWK || exit 1
  haveallfiles BASEDIR WORKDIR || exit 1
  haveallvars TESTLINK HOSTNAME || exit 1
  
  echo "--CONFIG-- [init003c] $0: Configuration ok..."
  exit 0
}

#------------------------------------------------------------------------

echo
echo "# Performing check of root directory..."

haveallcmds CAT SORT AWK LS RM GETFS GREP AWK || exit 1
haveallfiles BASEDIR WORKDIR || exit 1
haveallvars TESTLINK HOSTNAME || exit 1

# Checking to see if the root directory is on the correct INODE number
inode=`$LS -di / | $AWK '{print $1}'`
fstype=`$GETFS | $GREP " / " | $AWK -F " " '{ print $5;}'`
[ $inode != 2 ] && [ "$fstype" = "ext2" -o "$fstype" = "ext3" ] &&
   message FAIL rootdir001f "" "Root directory on incorrect inode"


# Verify the permissions on the root directory is standard

getpermit / |
while read file owner group ur uw ux gr gw gx or ow ox suid sgid sticky
do
  # Verify the permissions on the root directory is standard
  [ "${gw}${ow}" != '00' ] && {
    str="The root directory / has"
      case "$gw$ow" in
        01) str="$str world write";;
        10) str="$str group \`$group' write";;
        11) str="$str group \`$group' and world write";;
      esac
      #echo FAIL "" "${str} access."
      message FAIL rootdir002f "" "${str} access."
  }

  # Verify the ownership on on the root directory is standard
  [ "$owner" != 'root' ] &&
    message FAIL rootdir003f "" "The root directory is owned by \`$owner', instead of root."
done
